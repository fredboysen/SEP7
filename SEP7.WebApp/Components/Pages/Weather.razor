@page "/weather"
@using ChartJs.Blazor.PieChart
@using ChartJs.Blazor.Common
@using ChartJs.Blazor.Util

<PageTitle>Totals Overview</PageTitle>

<h3>Totals Overview</h3>

<div>
    <h4>Pie Chart</h4>
    @if (PieChartConfig != null)
    {
        <Chart Config="@PieChartConfig" />
    }
    else
    {
        <p>Loading chart...</p>
    }
</div>

@code {
    private PieConfig? PieChartConfig;

    protected override void OnInitialized()
    {
        // Static Data
        var staticData = new List<(string Label, double Value)>
        {
            ("Static Item 1", 50),
            ("Static Item 2", 30),
            ("Static Item 3", 20)
        };

        // Extract labels and values
        var labels = staticData.Select(item => item.Label).ToList();
        var values = staticData.Select(item => item.Value).ToList();

        // Create the dataset
        var dataset = new PieDataset<double>
        {
            BackgroundColor = new IndexableOption<string>(values.Select(_ => $"#{RandomColor()}").ToArray()),
            BorderColor = new IndexableOption<string>(values.Select(_ => "rgba(255, 255, 255, 1)").ToArray()),
            HoverBackgroundColor = new IndexableOption<string>(values.Select(_ => "rgba(0, 0, 0, 0.3)").ToArray()),
            HoverBorderColor = new IndexableOption<string>(values.Select(_ => "rgba(255, 255, 255, 1)").ToArray()),
            BorderWidth = 2
        };

        dataset.AddRange(values);

        // Configure the Pie Chart
        PieChartConfig = new PieConfig
        {
            Options = new PieOptions { Responsive = true }
        };
        foreach (var label in labels)
        {
            PieChartConfig.Data.Labels.Add(label);
        }
        PieChartConfig.Data.Datasets.Add(dataset);
    }

    private static string RandomColor()
    {
        var random = new Random();
        return $"{random.Next(0, 255):X2}{random.Next(0, 255):X2}{random.Next(0, 255):X2}";
    }
}
